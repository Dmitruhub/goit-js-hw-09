{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAZQQ,SAASC,cAAc,SAC/BC,iBAAiB,UAexB,SAAsBC,GACpBA,EAAIC,iBACJ,IACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cACJC,EAAYC,OAAOL,EAAMM,OACzBC,EAAWF,OAAOJ,EAAKK,OACvBE,EAAaH,OAAOH,EAAOI,OAC/B,GAAIF,EAAY,GAAKG,EAAW,GAAKC,GAAc,EAEjD,YADAC,MAAM,yBAIR,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAYE,GAAY,EACzD1B,EAAc0B,EAAUN,GACrBO,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBO,YACE,IACEmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,QACrCA,GAGP6B,QAAQC,IAAI,uBAAqB/B,QAAiBC,UAEnD+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClBO,YACE,IACEmB,EAAA9B,GAAS+B,OAAOK,QACd,sBAAoBjC,QAAiBC,QACpCA,GAGP6B,QAAQC,IAAI,sBAAoB/B,QAAeC,UAEnDkB,GAAaG,EACbQ,QAAQC,IAAIhC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.1;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  let elemDelay = Number(delay.value);\n  let elemStep = Number(step.value);\n  let elemAmount = Number(amount.value);\n  if (elemDelay < 0 || elemStep < 0 || elemAmount <= 0) {\n    alert('Date must be positive');\n    return;\n  }\n\n  for (let position = 1; position <= elemAmount; position += 1) {\n    createPromise(position, elemDelay)\n      .then(({ position, delay }) => {\n        setTimeout(\n          () =>\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delay}ms`\n            ),\n          delay\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(\n          () =>\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delay}ms`\n            ),\n          delay\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    elemDelay += elemStep;\n    console.log(createPromise);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","elements","delay1","step","amount","currentTarget","elemDelay","Number","value","elemStep","elemAmount","alert","position1","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.b038d3cb.js.map"}